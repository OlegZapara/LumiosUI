"use client";

import { CardBody } from "@/components/ui/3d-card";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Button } from "@/components/ui/button";
import { Card, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { Skeleton } from "@/components/ui/skeleton";
import { Inter } from "next/font/google";
import Image from "next/image";

const inter = Inter({ subsets: ["latin", "cyrillic"] });

export default function TutorialPage() {
  function scrollIntoView(id: string) {
    console.log("scrooll");
    document
      .getElementById(id)
      ?.scrollIntoView({ behavior: "smooth", block: "center" });
  }

  return (
    <div className="container">
      <Card className="w-full shadow-md lg:shadow-lg h-auto">
        <CardHeader>
          <CardTitle>How to use Lumios Bot?</CardTitle>
        </CardHeader>
        <CardBody className="w-full flex flex-col gap-6 rounded-lg p-8 h-auto">
          <div className="flex flex-row justify-center gap-10 flex-wrap md:flex-nowrap">
            <div className="flex flex-col flex-grow px-10 border border-input p-8 rounded-md">
              <div className="text-2xl font-bold">Table of contents</div>
              <Separator className="my-4"></Separator>
              <Button
                onClick={() => scrollIntoView("Queues")}
                className="w-full justify-start"
                variant="ghost"
              >
                Queues
              </Button>
              <Button
                onClick={() => scrollIntoView("Rating")}
                className="w-full justify-start"
                variant="ghost"
              >
                Rating
              </Button>
              <Button
                onClick={() => scrollIntoView("Timetable")}
                className="w-full justify-start"
                variant="ghost"
              >
                Timetable
              </Button>
              <Button
                onClick={() => scrollIntoView("Tasks")}
                className="w-full justify-start"
                variant="ghost"
              >
                Tasks
              </Button>
              <Button
                onClick={() => scrollIntoView("Arguments")}
                className="w-full justify-start"
                variant="ghost"
              >
                Arguments
              </Button>
            </div>
            <div className="hidden md:flex flex-col flex-grow rounded-md aspect-auto overflow-hidden min-w-60 relative">
              <div className="relavtive h-full w-full">
                <Image
                  className="h-full w-full object-cover"
                  alt="Lumios + Telegram"
                  src="/Image.webp"
                  layout="fill"
                  objectFit="cover"
                ></Image>
              </div>
            </div>
          </div>
          <section id="Queues" className="w-full flex flex-col gap-4">
            <div className="pl-4 text-xl font-bold">Queues</div>
            <TelegramCommandWithExample
              command="/queue <–ù–∞–∑–≤–∞> - –°—Ç–≤–æ—Ä–∏—Ç–∏ —á–µ—Ä–≥—É —ñ–∑ –∑–∞–¥–∞–Ω–æ—é –Ω–∞–∑–≤–æ—é"
              examples={["/queue Lab Work ‚Ññ1", "/queue Lab1"]}
            />
            <TelegramCommandWithExample
              command="/mixed <–ù–∞–∑–≤–∞> - –°—Ç–≤–æ—Ä–∏—Ç–∏ –º—ñ—à–∞–Ω—É —á–µ—Ä–≥—É —ñ–∑ –∑–∞–¥–∞–Ω–æ—é –Ω–∞–∑–≤–æ—é"
              examples={["/mixed Lab Work ‚Ññ2", "/mixed Lab2"]}
            />
            <div className="pl-4">
              –ü–æ–¥–∞–ª—å—à–∞ –≤–∑–∞—î–º–æ–¥—ñ—è —ñ–∑ —á–µ—Ä–≥–∞–º–∏ —Ä–µ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö
              –∫–Ω–æ–ø–æ–∫ –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –≤—ñ–¥ –±–æ—Ç—É:
              <ul>
                <li>- Join üî∞ - –î–æ—î–¥–Ω–∞—Ç–∏—Å—è —É –∫—ñ–Ω–µ—Ü—å —á–µ—Ä–≥–∏</li>
                <li>
                  - I&#39;m done ‚úÖ - –í–∏–π—Ç–∏ –∑ —á–µ—Ä–≥–∏, —ñ —Å–ø–æ–≤—ñ—Å—Ç–∏—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ
                </li>
                <li>- Leave üîÑ - –í–∏–π—Ç–∏ –Ω–µ –∑ –≥–æ–ª–æ–≤–∏ —á–µ—Ä–≥–∏, –±–µ–∑ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</li>
                <li>- Delete ‚ùå - –í–∏–¥–∞–ª–∏—Ç–∏ —á–µ—Ä–≥—É, –ª–∏—à–µ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤</li>
                <li>- Notify ‚ö† - –°–ø–æ–≤—ñ—Å—Ç–∏—Ç–∏ –≥–æ–ª–æ–≤—É —á–µ—Ä–≥–∏ –ø—Ä–æ –π–æ–≥–æ –ø–æ–∑–∏—Ü—ñ—é</li>
                <li>- Shuffle üîÄ - –ü–µ—Ä–µ–º—ñ—à–∞—Ç–∏ —á–µ—Ä–≥—É —É –≤–∏–ø–∞–¥–∫–æ–≤–æ–º—É –ø–æ—Ä—è–¥–∫—É</li>
              </ul>
            </div>
          </section>
          <Separator></Separator>
          <section id="Rating" className="w-full flex flex-col gap-4">
            <div className="pl-4 text-xl font-bold">Rating</div>
            <TelegramCommand command="/stats - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–≤–∞–≥–∏ –≤ —Ü—å–æ–º—É —á–∞—Ç—ñ" />
            <TelegramCommand command="/me - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤–ª–∞—Å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–≤–∞–≥–∏ –≤ —Ü—å–æ–º—É —á–∞—Ç—ñ" />
            <TelegramCommand command="/shop - –ó–±—ñ–ª—å—à–∏—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –ª—ñ–º—ñ—Ç –∫—Ä–µ–¥–∏—Ç—ñ–≤" />
            <div className="pl-4">
              –ü–æ–≤–∞–≥–∞ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –∑–∞–≤–¥—è–∫–∏ —Ä–µ–∞–∫—Ü—ñ—è–º –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö
              –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∫–æ–∂–Ω–∞ —Ä–µ–∞–∫—Ü—ñ—è –º–∞—î —Å–≤–æ—î –¥–æ–¥–∞—Ç–Ω—î –∞–±–æ –≤—ñ–¥&#39;—î–º–Ω–µ
              –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∞–≥–∏. –ü—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è –º–∞–π–∂–µ –≤—Å—ñ –∑–≤–∏—á–∞–π–Ω—ñ —Ä–µ–∞–∫—Ü—ñ—ó –≤
              —Ç–µ–ª–µ–≥—Ä–∞–º—ñ.
            </div>
          </section>
          <Separator></Separator>
          <section id="Timetable" className="w-full flex flex-col gap-4">
            <div className="pl-4 text-xl font-bold">Timetable</div>
            <TelegramCommand command="/feed - –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–µ–±-—Ä–µ–¥–∞–∫—Ç–æ—Ä" />
            <TelegramCommand command="/today - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ" />
            <TelegramCommand command="/week - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å" />
          </section>
          <Separator></Separator>
          <section id="Tasks" className="w-full flex flex-col gap-4">
            <div className="pl-4 text-xl font-bold">Tasks</div>
            <TelegramCommandWithExample
              command="/task [dd.mm.year] [HH:mm] [–ù–∞–∑–≤–∞] <–ü–æ—Å–∏–ª–∞–Ω–Ω—è> - –°—Ç–≤–æ—Ä–∏—Ç–∏"
              examples={[
                "/task 31.10.2024 10:00 MyTask",
                "/task 31.10.2024 12:00 AnotherTask https://link/to/task.com",
              ]}
            />
            <TelegramCommandWithExample
              command="/edit [ID] [dd.mm.year] [HH:mm] [–ù–∞–∑–≤–∞] <–ü–æ—Å–∏–ª–∞–Ω–Ω—è> - –†–µ–¥–∞–≥—É–≤–∞—Ç–∏"
              examples={[
                "/edit 23 31.10.2024 11:00 MyUpdatedTask",
                "/edit 18 31.10.2024 13:00 AnotherTask https://updatedLink/to/task.com",
              ]}
            />
            <TelegramCommand command="/due- –°–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å" />
          </section>
          <Separator></Separator>
          <section id="Arguments" className="w-full flex flex-col gap-4">
            <div className="pl-4 text-xl font-bold">Arguments</div>
            <div className="pl-4">
              {
                "<–ê—Ä–≥—É–º–µ–Ω—Ç> —ñ [–ê—Ä–≥—É–º–µ–Ω—Ç] –≤—ñ–¥—Ä—ñ–∑–Ω—è—é—Ç—å—Å—è. –í —á–æ–º—É —Ä—ñ–∑–Ω–∏—Ü—è? [–ê—Ä–≥—É–º–µ–Ω—Ç] —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º, <–ê—Ä–≥—É–º–µ–Ω—Ç>  - –Ω—ñ"
              }
            </div>
          </section>
        </CardBody>
      </Card>
    </div>
  );
}

function TelegramCommand({
  command,
  example,
}: {
  command: string;
  example?: string;
}) {
  const splitString = command.split(" ");
  const keyword = splitString[0];
  const args = " " + splitString.slice(1).join(" ");
  return (
    <div className="px-4 py-2 flex flex-row bg-muted rounded-md">
      <pre className={`text-blue-500 ${inter.className}`}>{keyword}</pre>
      <pre className={inter.className}>{args}</pre>
    </div>
  );
}

function TelegramCommandWithExample({
  command,
  examples,
}: {
  command: string;
  examples: string[];
}) {
  const splitString = command.split(" ");
  const keyword = splitString[0];
  const args = " " + splitString.slice(1).join(" ");
  return (
    <Accordion type="single" collapsible>
      <AccordionItem value="item-1">
        <AccordionTrigger className="flex flex-row px-4 py-2 bg-muted rounded-md">
          <div className="flex flex-row">
            <pre className={`text-blue-500 ${inter.className}`}>{keyword}</pre>
            <pre className={inter.className}>{args}</pre>
          </div>
        </AccordionTrigger>
        <AccordionContent className="pl-4 flex flex-col mt-4 gap-4">
          {examples.map((example) => (
            <div
              key={example}
              className="px-4 py-2 flex flex-row bg-muted rounded-md text-base justify-between"
            >
              <div className="flex flex-row">
                <pre className={`text-blue-500 ${inter.className}`}>
                  {example.split(" ")[0]}
                </pre>
                <pre className={inter.className}>
                  {" " + example.split(" ").slice(1).join(" ")}
                </pre>
              </div>
              <div className="uppercase text-green-500">Example</div>
            </div>
          ))}
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  );
}
